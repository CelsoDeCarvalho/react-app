{"ast":null,"code":"import _regeneratorRuntime from\"/home/celso/Desktop/React Js APPS/corona-virus-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/celso/Desktop/React Js APPS/corona-virus-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from\"axios\";var BASE_URL=\"https://covid19.mathdro.id/api\";export var fetchData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(country){var modifiedUrl,_yield$axios$get,_yield$axios$get$data,confirmed,recovered,deaths,lastUpdate;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:modifiedUrl=BASE_URL;if(country){modifiedUrl=\"\".concat(BASE_URL,\"/countries/\").concat(country);}_context.prev=2;_context.next=5;return axios.get(modifiedUrl);case 5:_yield$axios$get=_context.sent;_yield$axios$get$data=_yield$axios$get.data;confirmed=_yield$axios$get$data.confirmed;recovered=_yield$axios$get$data.recovered;deaths=_yield$axios$get$data.deaths;lastUpdate=_yield$axios$get$data.lastUpdate;return _context.abrupt(\"return\",{confirmed:confirmed,recovered:recovered,deaths:deaths,lastUpdate:lastUpdate});case 14:_context.prev=14;_context.t0=_context[\"catch\"](2);console.log(_context.t0);case 17:case\"end\":return _context.stop();}}},_callee,null,[[2,14]]);}));return function fetchData(_x){return _ref.apply(this,arguments);};}();export var fetchCountries=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var _yield$axios$get2,countries;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return axios.get(\"\".concat(BASE_URL,\"/countries\"));case 3:_yield$axios$get2=_context2.sent;countries=_yield$axios$get2.data.countries;return _context2.abrupt(\"return\",countries.map(function(countries){return countries.name;}));case 8:_context2.prev=8;_context2.t0=_context2[\"catch\"](0);console.log(_context2.t0);case 11:case\"end\":return _context2.stop();}}},_callee2,null,[[0,8]]);}));return function fetchCountries(){return _ref2.apply(this,arguments);};}();","map":{"version":3,"sources":["/home/celso/Desktop/React Js APPS/corona-virus-app/src/api/index.js"],"names":["axios","BASE_URL","fetchData","country","modifiedUrl","get","data","confirmed","recovered","deaths","lastUpdate","console","log","fetchCountries","countries","map","name"],"mappings":"uQAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,QAAQ,CAAG,gCAAjB,CAEA,MAAO,IAAMC,CAAAA,SAAS,0FAAG,iBAAOC,OAAP,+MAEnBC,WAFmB,CAEPH,QAFO,CAIvB,GAAGE,OAAH,CAAW,CACTC,WAAW,WAAIH,QAAJ,uBAA0BE,OAA1B,CAAX,CACD,CANsB,sCAWwCH,CAAAA,KAAK,CAACK,GAAN,CAAUD,WAAV,CAXxC,8EAWdE,IAXc,CAWRC,SAXQ,uBAWRA,SAXQ,CAWEC,SAXF,uBAWEA,SAXF,CAWYC,MAXZ,uBAWYA,MAXZ,CAWmBC,UAXnB,uBAWmBA,UAXnB,iCAYd,CAACH,SAAS,CAATA,SAAD,CAAWC,SAAS,CAATA,SAAX,CAAqBC,MAAM,CAANA,MAArB,CAA4BC,UAAU,CAAVA,UAA5B,CAZc,4DAerBC,OAAO,CAACC,GAAR,cAfqB,qEAAH,kBAATV,CAAAA,SAAS,4CAAf,CAmBP,MAAO,IAAMW,CAAAA,cAAc,2FAAG,gNAGOb,CAAAA,KAAK,CAACK,GAAN,WAAaJ,QAAb,eAHP,yCAGba,SAHa,mBAGnBR,IAHmB,CAGbQ,SAHa,kCAInBA,SAAS,CAACC,GAAV,CAAc,SAACD,SAAD,QAAaA,CAAAA,SAAS,CAACE,IAAvB,EAAd,CAJmB,6DAO1BL,OAAO,CAACC,GAAR,eAP0B,sEAAH,kBAAdC,CAAAA,cAAc,2CAApB","sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = \"https://covid19.mathdro.id/api\";\n\nexport const fetchData = async (country) => {\n\n  let modifiedUrl=BASE_URL;\n\n  if(country){\n    modifiedUrl=`${BASE_URL}/countries/${country}`;\n  }\n\n  try {\n\n    //data-> dados da resposta da api e suas colunas\n    const {data:{confirmed,recovered,deaths,lastUpdate}} = await axios.get(modifiedUrl);\n    return {confirmed,recovered,deaths,lastUpdate};\n\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nexport const fetchCountries = async () => {\n  try {\n\n    const {data:{countries}} = await axios.get(`${BASE_URL}/countries`);\n    return countries.map((countries)=>countries.name);\n\n  } catch (error) {\n    console.log(error)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}