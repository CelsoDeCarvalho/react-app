{"version":3,"sources":["components/Cards/Cards.module.css","components/AppBar/AppBar.module.css","App.module.css","components/CountryPicker/CountryPicker.module.css","components/Cards/Cards.jsx","api/index.js","components/CountryPicker/CountryPicker.jsx","images/2010-01-01 02.05.34_13.jpg","components/AppBar/AppBar.jsx","images/image.png","App.js","index.js"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infectados","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","recuperados","mortos","skeleton","ClassName","grid","Skeleton","width","height","Box","pr","display","BASE_URL","fetchData","country","a","modifiedUrl","axios","get","console","log","fetchCountries","countries","map","name","CountryPicker","handlerCountryChange","useState","fetchedCountries","setFetchCountries","useEffect","fetchCountrie","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","NavBar","AppBar","title","Toolbar","typography","href","Avatar","size","alt","src","foto","App","state","dataFecth","setState","this","image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fd10e3b9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infectados\":\"Cards_infectados__2eM_j\",\"recuperados\":\"Cards_recuperados__1kjxN\",\"mortos\":\"Cards_mortos__3bY47\",\"skeleton\":\"Cards_skeleton__Fue5K\",\"grid\":\"Cards_grid__37RC7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AppBar_container__3uZgi\",\"typography\":\"AppBar_typography__2pRQN\",\"title\":\"AppBar_title__JfHv9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","import React from \"react\";\nimport { Card, CardContent, Typography, Grid, Box } from \"@material-ui/core\";\nimport styles from \"./Cards.module.css\";\nimport CountUp from \"react-countup\";\nimport cx from \"classnames\";\nimport Skeleton from '@material-ui/lab/Skeleton';\n\n\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n\n    if (!confirmed) {\n        return (\n\n            <div className={styles.skeleton}>\n                <Grid container spacing={3} justify=\"center\">\n                    <Grid ClassName={styles.grid} item component={Card} xs={12} md={3}>\n                        <Skeleton variant=\"rect\" width={210} height={118} />\n                        <Box pr={2}>\n                            <Typography gutterBottom variant=\"body2\">\n                            </Typography>\n                            <Typography display=\"block\" variant=\"caption\" color=\"textSecondary\">\n                            </Typography>\n                            <Typography variant=\"caption\" color=\"textSecondary\">\n                            </Typography>\n                        </Box>\n\n                    </Grid>\n\n                    <Grid ClassName={styles.grid} item component={Card} xs={12} md={3} >\n                        <Skeleton variant=\"rect\" width={210} height={118} />\n                        <Box pr={2}>\n                            <Typography gutterBottom variant=\"body2\">\n                            </Typography>\n                            <Typography display=\"block\" variant=\"caption\" color=\"textSecondary\">\n                            </Typography>\n                            <Typography variant=\"caption\" color=\"textSecondary\">\n                            </Typography>\n                        </Box>\n                    </Grid>\n\n                    <Grid ClassName={styles.grid} item component={Card} xs={12} md={3} >\n                        <Skeleton variant=\"rect\" width={210} height={118} />\n                        <Box pr={2}>\n                            <Typography gutterBottom variant=\"body2\">\n                            </Typography>\n                            <Typography display=\"block\" variant=\"caption\" color=\"textSecondary\">\n                            </Typography>\n                            <Typography variant=\"caption\" color=\"textSecondary\">\n                            </Typography>\n                        </Box>\n                    </Grid>\n\n                </Grid>\n            </div>\n        );\n    }\n\n    return (\n        <div className={styles.container}>\n            <Grid container spacing={3} justify=\"center\">\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infectados)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Infetados</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp\n\n                                start={0}\n                                end={confirmed.value}\n                                duration={3}\n                                separator=\".\"\n\n                            />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Casos ativos de COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recuperados)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Recuperados</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp\n\n                                start={0}\n                                end={recovered.value}\n                                duration={3}\n                                separator=\".\"\n\n                            />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Casos recuperados do COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.mortos)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Mortos</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp\n\n                                start={0}\n                                end={deaths.value}\n                                duration={3}\n                                separator=\".\"\n\n                            />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Numero de mortos de COVID-19</Typography>\n                    </CardContent>\n\n                </Grid>\n\n            </Grid>\n        </div>\n    );\n}\n\nexport default Cards","import axios from \"axios\";\n\nconst BASE_URL = \"https://covid19.mathdro.id/api\";\n\nexport const fetchData = async (country) => {\n\n  let modifiedUrl=BASE_URL;\n\n  if(country){\n    modifiedUrl=`${BASE_URL}/countries/${country}`;\n  }\n\n  try {\n\n    //data-> dados da resposta da api e suas colunas\n    const {data:{confirmed,recovered,deaths,lastUpdate}} = await axios.get(modifiedUrl);\n    return {confirmed,recovered,deaths,lastUpdate};\n\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nexport const fetchCountries = async () => {\n  try {\n\n    const {data:{countries}} = await axios.get(`${BASE_URL}/countries`);\n    return countries.map((countries)=>countries.name);\n\n  } catch (error) {\n    console.log(error)\n  }\n}\n","import React, { useEffect, useState } from \"react\";\nimport {FormControl,NativeSelect} from \"@material-ui/core\";\nimport styles from \"./CountryPicker.module.css\"\nimport {fetchCountries} from \"../../api\"\n\nconst CountryPicker = ({handlerCountryChange}) => {\n\n    const [fetchedCountries,setFetchCountries]=useState([]);\n\n    useEffect(() => {\n        const fetchCountrie= async () => {\n            setFetchCountries(await fetchCountries());\n        }\n\n        fetchCountrie();\n    },[setFetchCountries]);\n \n    return(\n        <div>\n            <FormControl className={styles.formControl}>\n                <NativeSelect defaultValue=\"\" onChange={(e) => handlerCountryChange(e.target.value)}>\n                    <option   value=\"\">Global</option> \n                    {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option> )}  \n                </NativeSelect>\n            </FormControl>\n        </div>\n    );\n}\n\nexport default CountryPicker","export default __webpack_public_path__ + \"static/media/2010-01-01 02.05.34_13.a0e615d5.jpg\";","import { AppBar, Avatar, Toolbar, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport styles from \"./AppBar.module.css\"\nimport foto from '/home/celso/Desktop/React Js APPS/corona-virus-app/src/images/2010-01-01 02.05.34_13.jpg';\n\n\nconst NavBar =() => {\n    return(\n        <div className={styles.container}>\n            <AppBar className={styles.title}>\n                <Toolbar variant=\"dense\">\n                    <Typography className={styles.typography}><a href=\"https://saudigitus.org/\">Saudigitus</a></Typography>\n                    <Avatar size=\"small\" alt=\"Celso Momade\" src={foto}/>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n\nexport default NavBar;","export default __webpack_public_path__ + \"static/media/image.9e5d4fc7.png\";","import React from \"react\";\nimport {Cards,CountryPicker,NavBar} from \"./components/Importacoes\";\nimport styles from './App.module.css';\nimport {fetchData} from \"./api/index\"\nimport foto from './images/image.png';\n\nclass App extends React.Component {\n\n\n    state = {\n        //Declarando um objeto de dados vazio\n        data:{},\n        country:'',\n    }\n\n    async componentDidMount() {\n        const dataFecth = await fetchData();\n        //Passando data para o obejeto dados\n        this.setState({data: dataFecth});\n    }\n\n    //Pegando o nome do pais\n    handlerCountryChange = async(country) => {\n        const dataFecth = await fetchData(country);\n        //Passando data para o obejeto dados\n        this.setState({data: dataFecth,country:country});\n    }\n\n    render() {\n\n        const {data} = this.state;\n        return(\n            <div className={styles.container}>\n                <NavBar/>\n                <img className={styles.image} src={foto} alt=\"foto de covid-19\"/>\n               <Cards data={data} />\n               <CountryPicker handlerCountryChange={this.handlerCountryChange}/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}